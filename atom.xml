<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog for Robert.LIU</title>
  
  <subtitle>刘骏的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.robert-liu-designer.tk/"/>
  <updated>2020-04-16T01:51:50.658Z</updated>
  <id>https://www.robert-liu-designer.tk/</id>
  
  <author>
    <name>Robert.LIU</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ML-Algorisum</title>
    <link href="https://www.robert-liu-designer.tk/2020/04/15/ML-Algorisum/"/>
    <id>https://www.robert-liu-designer.tk/2020/04/15/ML-Algorisum/</id>
    <published>2020-04-15T14:09:28.000Z</published>
    <updated>2020-04-16T01:51:50.658Z</updated>
    
    <content type="html"><![CDATA[<div align="center"><img src="https://cdn.jsdelivr.net/gh/CN-Robert-LIU/images@master/blog/images/ML/ML-AI.jpg"></div><h1><span id="types-of-machine-learning-algorithms">Types of Machine Learning Algorithms</span></h1><p>Supervised Learning Algorithms: 无监督学习<br>    Classification：分类<br>    Regression：回归<br>    Ensembling：集成方法<br>Unsupervised Learning Algorithms：无监督学习<br>    Association：关联<br>    Clustering：聚类<br>    Dimensionality Reduction：维度下降<br>Reinforcement learning：强化学习</p><h2><span id="supervised-learning-algorithms">Supervised Learning Algorithms</span></h2><h3><span id="1linear-regression线性回归">1.Linear Regression线性回归</span></h3><div align="center"><img src="https://cdn.jsdelivr.net/gh/CN-Robert-LIU/images@master/blog/images/ML/Linear-Regression.gif"></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> liner_model,datasets</span><br><span class="line"></span><br><span class="line"><span class="comment"># digit dataset frm sklearn</span></span><br><span class="line">digits_data = datasets.load_digits()</span><br><span class="line">linerModel = liner_model.LinerRegression()</span><br><span class="line"></span><br><span class="line"><span class="comment"># define training set</span></span><br><span class="line">x,y = digits_data.data[:<span class="number">-1</span>],digits_data.targets[:<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Train Model</span></span><br><span class="line">linerModel.fit(x_test,y_test)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Predict</span></span><br><span class="line">y_pred = linerModel.predict([digits_data.data[:<span class="number">-1</span>]])</span><br><span class="line">y_true = digits_data.target[:<span class="number">-1</span>]</span><br></pre></td></tr></table></figure><h3><span id="2logistic-regression逻辑回归">2.Logistic Regression逻辑回归</span></h3><div align="center"><img src="https://cdn.jsdelivr.net/gh/CN-Robert-LIU/images@master/blog/images/ML/Logistic-Regression.png"></div>Sigmoid Function<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Y &#x3D; E^(b0+b1 x)&#x2F;(1 + E^(b0+b1X))</span><br></pre></td></tr></table></figure><h3><span id="3cartclassification-and-regression-tree-implements-of-decision-tree决策树">3.CART(Classification and Regression Tree, implements of Decision Tree)决策树</span></h3><p>Include:<br>Root Nodes：决策节点<br>Interal Nodes：机会节点<br>Leaf Nodes：中节点</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/CN-Robert-LIU/images@master/blog/images/ML/Decision-Tree-Diagram.jpg"></div><h3><span id="4naive-bayes朴素贝叶斯">4.Naive Bayes朴素贝叶斯</span></h3><div align="center"><img src="https://cdn.jsdelivr.net/gh/CN-Robert-LIU/images@master/blog/images/ML/Naive-Bayes.png"></div>Bayes's Theorem<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">P(h&#x2F;d)&#x3D;(P(d&#x2F;h)P(h))&#x2F;p(d)</span><br></pre></td></tr></table></figure>NOTE:all the variables are independent of each other,<h3><span id="5knnk-nearest-neighbors-algorithmk-邻近算法">5.KNN(K-Nearest Neighbors algorithm)K-邻近算法</span></h3><div align="center"><img src="https://cdn.jsdelivr.net/gh/CN-Robert-LIU/images@master/blog/images/ML/KNN.jpg"></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> datasets</span><br><span class="line"><span class="keyword">from</span> sklearn.neighbors <span class="keyword">import</span> KNeighborsClassifier</span><br><span class="line"></span><br><span class="line"><span class="comment"># Import digits</span></span><br><span class="line">digits = datasets.load_digits()</span><br><span class="line">clf = KNeighborsClassifier(n_neighbors=<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">x,y = digits.data[:<span class="number">-1</span>],digits.target[:<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Train model</span></span><br><span class="line">clf.train(x,y)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Predict</span></span><br><span class="line">y_pred = clf.predict([digits.data[:<span class="number">-1</span>]])</span><br><span class="line">y_ture = digits.target[:<span class="number">-1</span>]</span><br></pre></td></tr></table></figure>## Unsupervised learning algorithms<h3><span id="6apriori关联规则算法">6.Apriori关联规则算法</span></h3><div align="center"><img src="https://cdn.jsdelivr.net/gh/CN-Robert-LIU/images@master/blog/images/ML/Apropri-Rule.png"></div>### 7.K-means K平均算法<div align="center"><img src="https://cdn.jsdelivr.net/gh/CN-Robert-LIU/images@master/blog/images/ML/k-means-algorithm.png"></div><h3><span id="8pacprincipal-component-analysis主成分析">8.PAC(Principal Component Analysis)主成分析</span></h3><div align="center"><img src="https://cdn.jsdelivr.net/gh/CN-Robert-LIU/images@master/blog/images/ML/PCA.png"></div><h2><span id="ensemble-learning-techniques集成学习">Ensemble learning techniques集成学习</span></h2><h3><span id="9-bagging-with-random-forests随机森林">9. Bagging with Random Forests随机森林</span></h3><div align="center"><img src="https://cdn.jsdelivr.net/gh/CN-Robert-LIU/images@master/blog/images/ML/Random-Forest.png"></div><h3><span id="10boosting-with-adaboostadaboost迭代分类器">10.Boosting with AdaBoost：Adaboost迭代分类器</span></h3><p>Suppport parallel ensemble</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/CN-Robert-LIU/images@master/blog/images/ML/Adaboost.png"></div>]]></content>
    
    <summary type="html">
    
      &lt;!--toc--&gt;
    
    </summary>
    
    
    
      <category term="ML" scheme="https://www.robert-liu-designer.tk/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>Java-Redis</title>
    <link href="https://www.robert-liu-designer.tk/2020/04/15/Java-Redis/"/>
    <id>https://www.robert-liu-designer.tk/2020/04/15/Java-Redis/</id>
    <published>2020-04-15T02:16:35.000Z</published>
    <updated>2020-04-15T11:52:38.629Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.CollectionUtils;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Robert.LIU</span></span><br><span class="line"><span class="comment"> * Rely on spring&amp;redis RedisTemplate Class</span></span><br><span class="line"><span class="comment"> * All Hash method start as h</span></span><br><span class="line"><span class="comment"> * All SET method start as s</span></span><br><span class="line"><span class="comment"> * All List Method start as l</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span>(<span class="string">"redisUtil"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisUtil</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> RedisTemplate&lt;String, Object&gt; redisTemplate;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRedisTemplate</span><span class="params">(RedisTemplate&lt;String, Object&gt; redisTemplate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.redisTemplate = redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//=============================common============================</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * define expire time</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> time (seconds)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">expire</span><span class="params">(String key,<span class="keyword">long</span> time)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(time&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                redisTemplate.expire(key, time, TimeUnit.SECONDS);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Obtain key expire time</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key Not null</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> time(seconds) 0 means always valid</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getExpire</span><span class="params">(String key)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.getExpire(key,TimeUnit.SECONDS);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * check key wether exist</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> true-exits false-miss</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasKey</span><span class="params">(String key)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.hasKey(key);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * delete cache</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key: one or multi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">del</span><span class="params">(String ... key)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(key!=<span class="keyword">null</span>&amp;&amp;key.length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(key.length==<span class="number">1</span>)&#123;</span><br><span class="line">                redisTemplate.delete(key[<span class="number">0</span>]);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                redisTemplate.delete(CollectionUtils.arrayToList(key));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//============================String=============================</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * common cache obtain</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> value</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">get</span><span class="params">(String key)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> key==<span class="keyword">null</span>?<span class="keyword">null</span>:redisTemplate.opsForValue().get(key);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * put common cache</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> true Or false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">set</span><span class="params">(String key,Object value)</span> </span>&#123;</span><br><span class="line">         <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForValue().set(key, value);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Common cache put include expire time</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> time (seconds) time should be seted over 0,otherwise the deadline would be unlimited</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> true Or false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">set</span><span class="params">(String key,Object value,<span class="keyword">long</span> time)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(time&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                redisTemplate.opsForValue().set(key, value, time, TimeUnit.SECONDS);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                set(key, value);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Auto Increment</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> delta: increment number(over than 0)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">incr</span><span class="params">(String key, <span class="keyword">long</span> delta)</span></span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(delta&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"increment coefficient must over than 0"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().increment(key, delta);</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Auto Decresement</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> delta: decrement number(lower than 0)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">decr</span><span class="params">(String key, <span class="keyword">long</span> delta)</span></span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(delta&lt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"coeffient must lower than 0"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().increment(key, delta);  </span><br><span class="line">        &#125;  </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//================================Map=================================</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * HashGet</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> item</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> value</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">hget</span><span class="params">(String key,String item)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForHash().get(key, item);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">return</span>  <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Obtain all hashKey</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> allkeys(Map&lt;Object,Object&gt;)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;Object,Object&gt; <span class="title">hmget</span><span class="params">(String key)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().entries(key);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * HashSet</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> map: multi keys</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> true Or false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hmset</span><span class="params">(String key, Map&lt;String,Object&gt; map)</span></span>&#123;  </span><br><span class="line">           <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForHash().putAll(key, map);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * HashSet:include expire time</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> map</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> time (seconds)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> true Or false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hmset</span><span class="params">(String key, Map&lt;String,Object&gt; map, <span class="keyword">long</span> time)</span></span>&#123;  </span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForHash().putAll(key, map);</span><br><span class="line">            <span class="keyword">if</span>(time&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                expire(key, time);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * put data into a hash table,if not exist, set new data into new slate</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> item</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> true Or false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hset</span><span class="params">(String key,String item,Object value)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForHash().put(key, item, value);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * put data into hash table, include expired time</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> item</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> time (second)  Note:would update hash table time</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> true Or false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hset</span><span class="params">(String key,String item,Object value,<span class="keyword">long</span> time)</span> </span>&#123;</span><br><span class="line">         <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForHash().put(key, item, value);</span><br><span class="line">            <span class="keyword">if</span>(time&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                expire(key, time);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * drop hash table time</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key: Not null</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> item</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hdel</span><span class="params">(String key, Object... item)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> &#123;key == <span class="keyword">null</span>&#125; &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        redisTemplate.opsForHash().delete(key,item);</span><br><span class="line">        &#125; </span><br><span class="line">    </span><br><span class="line">       <span class="comment">/**</span></span><br><span class="line"><span class="comment">        * Check hash table exist value</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> key: Not null</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> item: not null</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@return</span> true Or false</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hHasKey</span><span class="params">(String key, String item)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().hasKey(key, item);</span><br><span class="line">       &#125; </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * hash auto incement</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> item</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> by: increment number (over 0)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">hincr</span><span class="params">(String key, String item,<span class="keyword">double</span> by)</span></span>&#123;  </span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForHash().increment(key, item, by);</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * hash auto decrement</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> item</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> by: decrement(lower 0)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">hdecr</span><span class="params">(String key, String item,<span class="keyword">double</span> by)</span></span>&#123;  </span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForHash().increment(key, item,-by);  </span><br><span class="line">        &#125;  </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//============================set=============================</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Accordint key to obtain Set values</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> null or members</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;Object&gt; <span class="title">sGet</span><span class="params">(String key)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForSet().members(key);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * query value wether exist in set</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> true Or false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">sHasKey</span><span class="params">(String key,Object value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForSet().isMember(key, value);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * put data into set cache </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> values: SET </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> success numbers</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">sSet</span><span class="params">(String key, Object...values)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> redisTemplate.opsForSet().add(key, values);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * put set data into cache</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> time (seconds)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> values: </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> success number</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">sSetAndTime</span><span class="params">(String key,<span class="keyword">long</span> time,Object...values)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">            Long count = redisTemplate.opsForSet().add(key, values);</span><br><span class="line">            <span class="keyword">if</span>(time&gt;<span class="number">0</span>) expire(key, time);</span><br><span class="line">                    <span class="keyword">return</span> count;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * obtain set cache length</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> key size,if 0, no keys exist</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">sGetSetSize</span><span class="params">(String key)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForSet().size(key);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * drop value in values</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> values: could be muliti value</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> drop numbers</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">setRemove</span><span class="params">(String key, Object ...values)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Long count = redisTemplate.opsForSet().remove(key, values);</span><br><span class="line">                <span class="keyword">return</span> count;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">          e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">       <span class="comment">//===============================list=================================</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * get list cache content by range</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> start</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> end: 0 to -1</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Object&gt; <span class="title">lGet</span><span class="params">(String key,<span class="keyword">long</span> start, <span class="keyword">long</span> end)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForList().range(key, start, end);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * obtainn list length</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">lGetListSize</span><span class="params">(String key)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForList().size(key);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * According index obtain list values</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> index:  index&gt;=0， 0 table head，1:second element，and so on；index&lt;0，-1，tail,</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">lGetIndex</span><span class="params">(String key,<span class="keyword">long</span> index)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForList().index(key, index);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Put list into</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lSet</span><span class="params">(String key, Object value)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                redisTemplate.opsForList().rightPush(key, value);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * put object into cache,hold on expire time</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> time (seconds)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lSet</span><span class="params">(String key, Object value, <span class="keyword">long</span> time)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                redisTemplate.opsForList().rightPush(key, value);</span><br><span class="line">                <span class="keyword">if</span> (time &gt; <span class="number">0</span>) expire(key, time);</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * put object list into cache</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> time (seconds)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lSet</span><span class="params">(String key, List&lt;Object&gt; value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForList().rightPushAll(key, value);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * put list into cache,hold on expire time</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> time (second)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lSet</span><span class="params">(String key, List&lt;Object&gt; value, <span class="keyword">long</span> time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForList().rightPushAll(key, value);</span><br><span class="line">            <span class="keyword">if</span> (time &gt; <span class="number">0</span>) expire(key, time);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * update list data from index</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> index</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lUpdateIndex</span><span class="params">(String key, <span class="keyword">long</span> index,Object value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForList().set(key, index, value);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125; </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Move N-value </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> count Move Number</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> Moved Number</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">lRemove</span><span class="params">(String key,<span class="keyword">long</span> count,Object value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Long remove = redisTemplate.opsForList().remove(key, count, value);</span><br><span class="line">            <span class="keyword">return</span> remove;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="redis-data-type">Redis Data Type</span></h3><p>1.link operation</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Close Connection</span></span><br><span class="line">quit</span><br><span class="line"><span class="comment"># simple password register</span></span><br><span class="line">auth</span><br><span class="line"><span class="comment"># Help Code</span></span><br><span class="line"><span class="built_in">help</span> cmd</span><br></pre></td></tr></table></figure><p>2.persistant</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># syns data to disk</span></span><br><span class="line">    save</span><br><span class="line"><span class="comment"># asyn data to disk</span></span><br><span class="line">    bgsave</span><br><span class="line"><span class="comment"># Return UNIX time stamp last time</span></span><br><span class="line">    lastsave</span><br><span class="line"><span class="comment"># data sync disk and close service</span></span><br><span class="line">    shutdown</span><br></pre></td></tr></table></figure><p>3.remote service control</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># server info and count</span></span><br><span class="line">    info</span><br><span class="line"><span class="comment"># storage request realtime</span></span><br><span class="line">    monitor</span><br><span class="line"><span class="comment"># change copy strategy</span></span><br><span class="line">    slaveof</span><br><span class="line"><span class="comment"># runtime setting redis server</span></span><br><span class="line">    config</span><br></pre></td></tr></table></figure><p>4.operate value</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">exists(key)</span><br><span class="line">del(key)</span><br><span class="line"><span class="comment"># return data type</span></span><br><span class="line"><span class="built_in">type</span>(key)</span><br><span class="line"></span><br><span class="line">keys(pattern)</span><br><span class="line">randomkey</span><br><span class="line">keyrename(oldname,newname)</span><br><span class="line"><span class="comment"># database keys num</span></span><br><span class="line">dbsize</span><br><span class="line"><span class="comment"># key valid time length</span></span><br><span class="line">expire</span><br><span class="line"><span class="comment"># obtain key vacation time</span></span><br><span class="line">ttl</span><br><span class="line"><span class="comment"># query refer index</span></span><br><span class="line">select(index)</span><br><span class="line"><span class="comment"># move key to dbindex</span></span><br><span class="line">move(key,dbindex)</span><br><span class="line"><span class="comment"># delete current database all keys</span></span><br><span class="line">flushdb</span><br><span class="line"><span class="comment"># drop all database keys</span></span><br><span class="line">flushall</span><br></pre></td></tr></table></figure><p>5.operate string</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set(key,value)</span><br><span class="line">get(key)</span><br><span class="line">getset(key,value)</span><br><span class="line"># obatain muti keys result</span><br><span class="line">mget(key1,key2,...,keyN)</span><br><span class="line"># </span><br><span class="line">setnx(key,value)</span><br><span class="line">setex(key,time,value)</span><br><span class="line">mset(key N,value N)</span><br><span class="line"># New set,which all not exist</span><br><span class="line">msetnx(key N, value N)</span><br><span class="line">incr(key)</span><br><span class="line"># Integer</span><br><span class="line">incrby(key,integer)</span><br><span class="line">decr(key)</span><br><span class="line">decrby(key,integer)</span><br><span class="line">append(key,value)</span><br><span class="line">substr(key,start,end)</span><br></pre></td></tr></table></figure><p>6.List</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># tail append</span><br><span class="line">rpush(key,value)</span><br><span class="line"># head append</span><br><span class="line">lpush(key,value)</span><br><span class="line"># key list length</span><br><span class="line">llen(key)</span><br><span class="line">lrange(key,start,end)</span><br><span class="line">lpop(key)</span><br><span class="line">rpop(key)</span><br><span class="line">blpop(key1,key2,...,keyN,timeout)</span><br><span class="line">brpop(key1,key2,...,keyN,timeout)</span><br><span class="line">rpoplpush(srckey, dstkey)</span><br></pre></td></tr></table></figure><p>7.SET</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sadd(key, member)</span><br><span class="line">srem(key, member)</span><br><span class="line">spop(key)</span><br><span class="line">smove(srckey, dstkey, member)</span><br><span class="line">scard(key)</span><br><span class="line">sismember(key, member)</span><br><span class="line">sinter(key1, key2,…key N)</span><br><span class="line">sinterstore(dstkey, (keys))</span><br><span class="line">sunion(key1, (keys))</span><br><span class="line">sunionstore(dstkey, (keys))</span><br><span class="line">sdiff(key1, (keys))</span><br><span class="line">sdiffstore(dstkey, (keys))</span><br><span class="line">smembers(key)</span><br><span class="line">srandmember(key)</span><br></pre></td></tr></table></figure><p>8.Hash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hset(key, field, value)</span><br><span class="line">hget(key, field)</span><br><span class="line">hmget(key, (fields))</span><br><span class="line">hmset(key, (fields))</span><br><span class="line">hincrby(key, field, integer)</span><br><span class="line">hexists(key, field)</span><br><span class="line">hdel(key, field)</span><br><span class="line">hlen(key)</span><br><span class="line">hkeys(key)</span><br><span class="line">hvals(key)</span><br><span class="line">hgetall(key)</span><br></pre></td></tr></table></figure><p>9.Redis Publish</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PSUBSCRIBE pattern [pattern ...]</span><br><span class="line">PUBSUB subcommand [argument [argument ...]]</span><br><span class="line">PUBLISH channel [argument [argument ...]</span><br><span class="line">PUNSUBSCRIBE [pattern [pattern ...]]</span><br><span class="line">SUBSCRIBE channel [channel ...]</span><br><span class="line">UNSUBSCRIBE [channel [channel ...]]</span><br></pre></td></tr></table></figure><p>10.Redis Transaction</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Cancel Transaction</span><br><span class="line">DISCARD</span><br><span class="line"># Submit All Trans</span><br><span class="line">EXEC</span><br><span class="line"># Mark Trans Start</span><br><span class="line">MULTI</span><br><span class="line"># Cancel Watch Key</span><br><span class="line">UNWATCH</span><br><span class="line"># Monitor KEY</span><br><span class="line">WATCH key [key ...]</span><br></pre></td></tr></table></figure><p>11.Count Keys Num</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">keys *</span><br><span class="line">keys prefix_*</span><br></pre></td></tr></table></figure><p>12.flush database</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flushdb</span><br><span class="line">flushall</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;lin
      
    
    </summary>
    
    
    
      <category term="Java" scheme="https://www.robert-liu-designer.tk/tags/Java/"/>
    
      <category term="Redis" scheme="https://www.robert-liu-designer.tk/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Tensorflow-SaveAndLoadModel</title>
    <link href="https://www.robert-liu-designer.tk/2020/04/13/Tensorflow-SaveAndLoadModel/"/>
    <id>https://www.robert-liu-designer.tk/2020/04/13/Tensorflow-SaveAndLoadModel/</id>
    <published>2020-04-13T14:59:27.000Z</published>
    <updated>2020-04-15T13:01:56.651Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="1save-model">1.Save Model</span></h2><p>file extension description:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Meta Graph(.meta): Variables, Operations,Collections</span><br><span class="line">Checkpoint(.ckpt): Binary file, Include weights,biases,gradients and other variables.</span><br></pre></td></tr></table></figure><p>Python3 operation:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"></span><br><span class="line">w1 = tf.Variable(tf.random_normal(shape=[<span class="number">2</span>],normal=<span class="string">'w1'</span>))</span><br><span class="line">w2 = tf.Variable(tf.random_normal(shape=[<span class="number">5</span>],normal=<span class="string">'w2'</span>))</span><br><span class="line"></span><br><span class="line">saver = tf.train.Saver()</span><br><span class="line">sess = tf.Session()</span><br><span class="line">sess.run(tf.global_variables_initializer())</span><br><span class="line"></span><br><span class="line"><span class="comment"># save model</span></span><br><span class="line">saver.save(sess,<span class="string">"test_model_name"</span>)</span><br><span class="line">print(<span class="string">'test_model_name has been saved!'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## Save model file as follow:</span></span><br><span class="line"><span class="comment"># test_model_name.data-0000-of-0001</span></span><br><span class="line"><span class="comment"># test_model_name.index</span></span><br><span class="line"><span class="comment"># test_model_name.meta</span></span><br><span class="line"><span class="comment"># checkpoint</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># After Iteration 2000 times save model</span></span><br><span class="line">saver.save(sess,<span class="string">"test_model_name"</span>,global_step=<span class="number">2000</span>)</span><br><span class="line"><span class="comment">## Save model file as follow</span></span><br><span class="line"><span class="comment"># test_model_name-3000.data-00000-of-00001</span></span><br><span class="line"><span class="comment"># test_model_name-3000.index</span></span><br><span class="line"><span class="comment"># test_model_name-3000.meta</span></span><br><span class="line"><span class="comment"># checkpoint</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If you not want save mete file each iteration,set write_meta_graph sa False</span></span><br><span class="line">saver.save(sess,<span class="string">"test_model_name"</span>,global_step=<span class="number">1000</span>,write_meta_graph=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># If you want to save maximal latest four models in each 2 hours</span></span><br><span class="line">saver = tf.train.saver(max_to_keep=<span class="number">4</span>,keep_checkpoint_every_n_hours=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><h2><span id="2load-model-which-has-been-trained-completed">2.Load model which has been trained completed</span></h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Generate network model(graph/network)</span></span><br><span class="line">loader = tf.train.import_meta_graph(<span class="string">'test_model_name-1000.meta'</span>)</span><br><span class="line"><span class="comment"># Load Parameter</span></span><br><span class="line"><span class="keyword">with</span> tf.Session <span class="keyword">as</span> sess:</span><br><span class="line">    new_saver = tf.train.import_meta_graph(<span class="string">'test_model_name-1000.meta'</span>)</span><br><span class="line">    <span class="comment"># default check point at py file's same directory</span></span><br><span class="line">    new_saver.restore(sess,tf.train.latest_checkpoint(<span class="string">'./'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Model would be restored. Above statement will print the saved value of w1 variable</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;1save-model&quot;&gt;1.Save Model&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;file extension description:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;
      
    
    </summary>
    
    
    
      <category term="ML" scheme="https://www.robert-liu-designer.tk/tags/ML/"/>
    
      <category term="Python" scheme="https://www.robert-liu-designer.tk/tags/Python/"/>
    
      <category term="Tool" scheme="https://www.robert-liu-designer.tk/tags/Tool/"/>
    
      <category term="Tensorflow" scheme="https://www.robert-liu-designer.tk/tags/Tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>Java-JVM</title>
    <link href="https://www.robert-liu-designer.tk/2020/04/11/Java-JVM/"/>
    <id>https://www.robert-liu-designer.tk/2020/04/11/Java-JVM/</id>
    <published>2020-04-11T09:49:10.487Z</published>
    <updated>2020-04-11T09:49:10.487Z</updated>
    
    <content type="html"><![CDATA[<p>JVM Parameter:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-server</span><br><span class="line">-Xms6000M</span><br><span class="line">-Xmx6000M</span><br><span class="line">-Xmn500M</span><br><span class="line">-XX:PermSize&#x3D;500M</span><br><span class="line">-XX:MaxPermSize&#x3D;500M</span><br><span class="line">-XX:SurvivorRatio&#x3D;65536</span><br><span class="line">-XX:MaxTenuringThreshold&#x3D;0</span><br><span class="line">-Xnoclassgc</span><br><span class="line">-XX:+DisableExplicitGC</span><br><span class="line">-XX:+UseParNewGC</span><br><span class="line">-XX:+UseConcMarkSweepGC</span><br><span class="line">-XX:+UseCMSCompactAtFullCollection</span><br><span class="line">-XX:CMSFullGCsBeforeCompaction&#x3D;0</span><br><span class="line">-XX:+CMSClassUnloadingEnabled</span><br><span class="line">-XX:-CMSParallelRemarkEnabled</span><br><span class="line">-XX:CMSInitiatingOccupancyFraction&#x3D;90</span><br><span class="line">-XX:SoftRefLRUPolicyMSPerMB&#x3D;0</span><br><span class="line">-XX:+PrintClassHistogram</span><br><span class="line">-XX:+PrintGCDetails</span><br><span class="line">-XX:+PrintGCTimeStamps</span><br><span class="line">-XX:+PrintHeapAtGC</span><br><span class="line">-Xloggc:log&#x2F;gc.log</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;JVM Parameter:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-server&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;lin
      
    
    </summary>
    
    
    
      <category term="Java" scheme="https://www.robert-liu-designer.tk/tags/Java/"/>
    
      <category term="JVM" scheme="https://www.robert-liu-designer.tk/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>visual-Echarts</title>
    <link href="https://www.robert-liu-designer.tk/2020/04/11/visual-Echarts/"/>
    <id>https://www.robert-liu-designer.tk/2020/04/11/visual-Echarts/</id>
    <published>2020-04-11T09:46:14.353Z</published>
    <updated>2020-04-11T09:46:14.353Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="project-display">Project Display</span></h3><ul><li><a href="/echart/visual-plate/index.html">Visula-Plate-Demo</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3&gt;&lt;span id=&quot;project-display&quot;&gt;Project Display&lt;/span&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;/echart/visual-plate/index.html&quot;&gt;Visula-Plate-Demo&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
      
    
    </summary>
    
    
    
      <category term="javacript" scheme="https://www.robert-liu-designer.tk/tags/javacript/"/>
    
      <category term="demo" scheme="https://www.robert-liu-designer.tk/tags/demo/"/>
    
  </entry>
  
  <entry>
    <title>Java-Concurrent-Lock</title>
    <link href="https://www.robert-liu-designer.tk/2020/04/10/Java-Concurrent-Lock/"/>
    <id>https://www.robert-liu-designer.tk/2020/04/10/Java-Concurrent-Lock/</id>
    <published>2020-04-09T16:24:30.000Z</published>
    <updated>2020-04-09T16:53:57.149Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="#PessimisticLock">PessimisticLock</a></li><li><a href="#OptimisticLock">OptimisticLock</a></li><li><a href="#Simple-Spring-Memcached">Simple-Spring-Memcached</a></li></ul><p><a name="PessimisticLock"></a></p><h3><span id="pessimistic-lock">Pessimistic Lock</span></h3><h4><span id="hibernate-lock-mode">Hibernate Lock Mode：</span></h4><figure class="highlight"><table><tr><td class="code"><pre><span class="line">## According Hibernate Lock Mechanism</span><br><span class="line"># Without Lock</span><br><span class="line">LockMode.NONE</span><br><span class="line"></span><br><span class="line"># Insert Or Update auto obtain</span><br><span class="line">LockMode.WRITE</span><br><span class="line"></span><br><span class="line"># Read Record</span><br><span class="line">LockMode.READ</span><br><span class="line"></span><br><span class="line">## Database Inner Lock,Application Layer</span><br><span class="line"># for update</span><br><span class="line">LockMode.UPGRADE</span><br><span class="line"># Oracle Lock Mechanism: for update nowait</span><br><span class="line">LockMode.UPGRADE_NOWAIT</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### Realize</span><br><span class="line"># Criteria.setLockMode</span><br><span class="line"># Query.setLockMode</span><br><span class="line"># Session.lock</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Note: All Lock Mode Should Set Before Generate SQL Sentence.</span><br></pre></td></tr></table></figure><h4><span id="mysqlpessimistic-locking">Mysql:(Pessimistic Locking)</span></h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--start transaction</span></span><br><span class="line"><span class="keyword">begin</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">account</span> <span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">"RobertLIU"</span> <span class="keyword">for</span> <span class="keyword">update</span>;</span><br><span class="line"><span class="comment">--If not commit.the table line will be locked</span></span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--The lock be released</span></span><br><span class="line"><span class="comment">--Query OK</span></span><br></pre></td></tr></table></figure><p><a name="OptimisticLock"></a></p><h3><span id="optimistic-lock">Optimistic Lock</span></h3><p>optimistic lock property</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">none: without lock</span><br><span class="line">version: Version Mechanism</span><br><span class="line">dirty: Check Modified Property</span><br><span class="line">all: Check All Property</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Note: Using &#39;version&#39; would be recommend</span><br></pre></td></tr></table></figure><h4><span id="xml-setting">XML Setting</span></h4><p>1.User.hbm.xml</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">hibernate-mapping</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"-//Hibernate/Hibernate Mapping DTD 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span> <span class="attr">package</span>=<span class="string">"com.robertliu.test"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"User"</span>  <span class="attr">table</span>=<span class="string">"user"</span> <span class="attr">optimistic-lock</span>=<span class="string">"version"</span> &gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"native"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--version tag must follow behind id --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span> <span class="attr">column</span>=<span class="string">"version"</span> <span class="attr">name</span>=<span class="string">"version"</span>  /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"userName"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span>/&gt;</span></span><br><span class="line">                 </span><br><span class="line">    <span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line">     </span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.hibernate.cfg.xml</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">hibernate-configuration</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"-//Hibernate/Hibernate Configuration DTD 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">session-factory</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">&lt;!-- Setting database dialect.If use jbpm，Database Dialect must be InnoDB--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dialect"</span>&gt;</span>org.hibernate.dialect.MySQL5InnoDBDialect<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Auto Create Data Table --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hbm2ddl.auto"</span>&gt;</span>update<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Displat Hibernate persist operation SQL sentence --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"show_sql"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Format SQL script and export --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"format_sql"</span>&gt;</span>false<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"current_session_context_class"</span>&gt;</span>thread<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">&lt;!-- Import Mapping Setting  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connection.url"</span>&gt;</span>jdbc:mysql:///user<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connection.username"</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connection.password"</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connection.driver_class"</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapping</span> <span class="attr">resource</span>=<span class="string">"com/xiaohao/test/User.hbm.xml"</span> /&gt;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">session-factory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.UserTest.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaohao.test;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.SessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.Transaction;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.cfg.Configuration;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Configuration conf=<span class="keyword">new</span> Configuration().configure();</span><br><span class="line">        SessionFactory sf=conf.buildSessionFactory();</span><br><span class="line">        Session session=sf.getCurrentSession();</span><br><span class="line">        <span class="comment">// All action should start transaction if you want to make optimistic lock.</span></span><br><span class="line">        Transaction tx=session.beginTransaction();</span><br><span class="line">        User user=(User) session.get(User<span class="class">.<span class="keyword">class</span>, 1)</span>;</span><br><span class="line">        user.setUserName(<span class="string">"221"</span>);</span><br><span class="line">     </span><br><span class="line">        System.out.println(<span class="string">"恭喜您，用户的数据插入成功了哦~~"</span>);</span><br><span class="line">        tx.commit();</span><br><span class="line">        <span class="comment">// version would be auto increase</span></span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.Realize Concurrent and Sync</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiaohao.test;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.SessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.Transaction;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.cfg.Configuration;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Configuration conf=<span class="keyword">new</span> Configuration().configure();</span><br><span class="line">        SessionFactory sf=conf.buildSessionFactory();</span><br><span class="line">        Session session=sf.openSession();</span><br><span class="line"><span class="comment">//      Session session2=sf.openSession();</span></span><br><span class="line">        Transaction tx=session.beginTransaction();</span><br><span class="line">        User user=(User) session.createQuery(<span class="string">" from User user where user=5"</span>).uniqueResult();</span><br><span class="line">        user.setUserName(<span class="string">"101"</span>);</span><br><span class="line">        tx.commit();</span><br><span class="line">        System.out.println(user.getVersion());</span><br><span class="line">         </span><br><span class="line">        System.out.println(user.getVersion());</span><br><span class="line"><span class="comment">//      User user2=(User) session.createQuery(" from User user where user=5").uniqueResult();</span></span><br><span class="line"><span class="comment">//      System.out.println(user2.getVersion());</span></span><br><span class="line"><span class="comment">//      System.out.println(user.getVersion()==user2.getVersion());</span></span><br><span class="line"><span class="comment">//      Transaction tx2=session2.beginTransaction();</span></span><br><span class="line"><span class="comment">//      user2.setUserName("4468");</span></span><br><span class="line"><span class="comment">//      tx2.commit();</span></span><br><span class="line"><span class="comment">//      System.out.println(user2.getVersion());</span></span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><b>org.hibernate.StaleObjectStateException:</b></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Exception in thread "main" org.hibernate.StaleObjectStateException: Row was updated or deleted by another transaction (or unsaved-value mapping was incorrect):</span><br></pre></td></tr></table></figure><p><a name="JavaCacheFramework"></a></p><h3><span id="java-opensource-cache-framework">Java OpenSource Cache Framework</span></h3><p>TODO:<br>|NAME|Introduction|<br>|:-:|:-:|<br>|JBossCache/TreeCache||<br>|OSCache||<br>|JCACHE||<br>|Ehcache||<br>|Java Caching System/JCS||<br>|SwarmCache||<br>|ShiftOne||<br>|WhirlyCache||<br>|Jofti||<br>|cache4j||<br>|Open Terracotta|JVM |<br>|sccache||<br>|Shoal||<br>|Simple-Spring-Memcached||</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#PessimisticLock&quot;&gt;PessimisticLock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#OptimisticLock&quot;&gt;OptimisticLock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Simple-Spri
      
    
    </summary>
    
    
    
      <category term="Java" scheme="https://www.robert-liu-designer.tk/tags/Java/"/>
    
      <category term="Concurrent" scheme="https://www.robert-liu-designer.tk/tags/Concurrent/"/>
    
  </entry>
  
  <entry>
    <title>Java-Concurrent-AsyncToSyncActivity</title>
    <link href="https://www.robert-liu-designer.tk/2020/04/09/Java-Concurrent-AsyncToSync/"/>
    <id>https://www.robert-liu-designer.tk/2020/04/09/Java-Concurrent-AsyncToSync/</id>
    <published>2020-04-09T13:51:44.000Z</published>
    <updated>2020-04-09T16:20:48.270Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="asynctosyncactivity">AsyncToSyncActivity</span></h2><div id="flowchart-0" class="flow-chart"></div><ul><li>AsyncToSyncActivity<ul><li><a href="#CountDownLatch">CountDownLatch</a></li><li><a href="#CyclicBarrier">CyclicBarrier</a></li><li><a href="#FutureTask">FutureTask</a></li><li><a href="#rxjava">rxjava</a></li></ul></li></ul><p><a name="CountDownLatch"></a></p><h3><span id="countdownlatch">CountDownLatch</span></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Define Runnable</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomRunnable</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> CountDownLatch countDownLatch;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> delayTime;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CustomRunnable</span><span class="params">(CountDownLatch countDownLatch, String name, <span class="keyword">int</span> delayTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.countDownLatch = countDownLatch;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.delayTime = delayTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        LogUtils.e(TAG, <span class="string">"Start Execute"</span> + name);</span><br><span class="line">        ThreadUtils.logCurrThreadName(TAG + <span class="string">" "</span> + name);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            TimeUnit.SECONDS.sleep(delayTime);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        LogUtils.e(TAG, name + <span class="string">"Excute Complete"</span>);</span><br><span class="line">        <span class="keyword">if</span> (countDownLatch != <span class="keyword">null</span>) &#123;</span><br><span class="line">            countDownLatch.countDown();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> CountDownLatch countDownLatch</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBtnJavaCountDownLatchClicked</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * After complete excute Task2&amp;Task3，then excute Task1</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     countDownLatch = <span class="keyword">new</span> CountDownLatch(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">     Runnable Task1 = () -&gt; &#123;</span><br><span class="line">         LogUtils.e(TAG, <span class="string">"Start Excute Task1"</span>);</span><br><span class="line">         ThreadUtils.logCurrThreadName(TAG + <span class="string">" Task1"</span>);</span><br><span class="line">         <span class="keyword">try</span> &#123;</span><br><span class="line">             countDownLatch.await();</span><br><span class="line">         &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">             e.printStackTrace();</span><br><span class="line">         &#125;</span><br><span class="line">         LogUtils.e(TAG, <span class="string">"Task1 Complete"</span>);</span><br><span class="line">     &#125;;</span><br><span class="line"></span><br><span class="line">     <span class="comment">// Create Thread Pool</span></span><br><span class="line">     ExecutorService executors = Executors.newFixedThreadPool(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">     <span class="comment">// Excute</span></span><br><span class="line">     executors.submit(Task1);</span><br><span class="line">     executors.submit(<span class="keyword">new</span> CustomRunnable(countDownLatch, <span class="string">"Task2"</span>, <span class="number">3</span>));</span><br><span class="line">     executors.submit(<span class="keyword">new</span> CustomRunnable(countDownLatch, <span class="string">"Task3"</span>, <span class="number">5</span>));</span><br><span class="line"></span><br><span class="line">     <span class="comment">// Task Complete, Close ThreadPool</span></span><br><span class="line">     executors.shutdown();</span><br><span class="line"></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><a name="CyclicBarrier"></a></p><h3><span id="cyclicbarrier">CyclicBarrier</span></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Define CyclicBarrier Common Barrier Point Threads Num</span></span><br><span class="line">Int barThreadsNum = <span class="number">10</span>;</span><br><span class="line">CyclicBarrier cyclicBarrier = <span class="keyword">new</span> CyclicBarrier(barThreadsNum, () -&gt; &#123;</span><br><span class="line">    LogUtils.e(TAG, <span class="string">"All Task Complete"</span>);</span><br><span class="line">    ThreadUtils.logCurrThreadName(TAG + <span class="string">" barrierAction"</span>);</span><br><span class="line">&#125;);</span><br><span class="line">List&lt;Runnable&gt; runnables = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">int</span> finalI = i;</span><br><span class="line">    Runnable runnable = () -&gt; &#123;</span><br><span class="line">        LogUtils.e(TAG, <span class="string">"Current is "</span> + finalI + <span class="string">"task, start execute"</span>);</span><br><span class="line">        ThreadUtils.logCurrThreadName(TAG + <span class="string">" child task"</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            TimeUnit.SECONDS.sleep(finalI);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        LogUtils.e(TAG, <span class="string">"Current is "</span> + finalI + <span class="string">"task, finish exceute"</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            cyclicBarrier.await();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (BrokenBarrierException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    runnables.add(runnable);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ExecutorService executorService = Executors.newCachedThreadPool();</span><br><span class="line"><span class="keyword">for</span> (Runnable r : runnables) &#123;</span><br><span class="line">    executorService.submit(r);</span><br><span class="line">&#125;</span><br><span class="line">executorService.shutdown();</span><br></pre></td></tr></table></figure><p><a name="FutureTask"></a></p><h3><span id="futuretask">FutureTask</span></h3><p>Callable:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomCallable</span> <span class="keyword">implements</span> <span class="title">Callable</span>&lt;<span class="title">Integer</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        LogUtils.e(TAG, <span class="string">"Child thread process"</span>);</span><br><span class="line">        ThreadUtils.logCurrThreadName(TAG + <span class="string">" Task start"</span>);</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">            Thread.sleep(<span class="number">100</span>);</span><br><span class="line">            sum += i;</span><br><span class="line">            ThreadUtils.logCurrThreadName(TAG + <span class="string">" Task sum:"</span> + sum);</span><br><span class="line">        &#125;</span><br><span class="line">        ThreadUtils.logCurrThreadName(TAG + <span class="string">" Task end"</span>);</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.Callable + Future + ExecutorService</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBtnJavaCallableFutureClicked</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="comment">// Callable + Future + ExecutorService</span></span><br><span class="line">     ThreadUtils.logCurrThreadName(TAG + <span class="string">"  main start"</span>);</span><br><span class="line">     ExecutorService executorService = Executors.newCachedThreadPool();</span><br><span class="line">     CustomCallable task = <span class="keyword">new</span> CustomCallable();</span><br><span class="line">     Future&lt;Integer&gt; result = executorService.submit(task);</span><br><span class="line">     executorService.shutdown();</span><br><span class="line"></span><br><span class="line">     ThreadUtils.logCurrThreadName(TAG + <span class="string">"  main 111"</span>);</span><br><span class="line"></span><br><span class="line">     <span class="keyword">try</span> &#123;</span><br><span class="line">         LogUtils.e(TAG, <span class="string">"task执行结果:"</span> + result.get());</span><br><span class="line">     &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">         e.printStackTrace();</span><br><span class="line">     &#125; <span class="keyword">catch</span> (ExecutionException e) &#123;</span><br><span class="line">         e.printStackTrace();</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">         ThreadUtils.logCurrThreadName(TAG + <span class="string">"  main 222:"</span> + i);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     ThreadUtils.logCurrThreadName(TAG + <span class="string">"  main 主线程任务执行完毕"</span>);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>2.Callable + FutureTask + ExecutorService</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBtnJavaCallableFutureTaskClicked</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Callable + FutureTask + ExecutorService</span></span><br><span class="line">    ThreadUtils.logCurrThreadName(TAG + <span class="string">"  Main thread start"</span>);</span><br><span class="line">    ExecutorService executorService = Executors.newCachedThreadPool();</span><br><span class="line">    CustomCallable task = <span class="keyword">new</span> CustomCallable();</span><br><span class="line">    <span class="comment">// FutureTask</span></span><br><span class="line">    FutureTask&lt;Integer&gt; futureTask = <span class="keyword">new</span> FutureTask&lt;&gt;(task);</span><br><span class="line">    <span class="comment">// FutureTask Object</span></span><br><span class="line">    executorService.submit(futureTask);</span><br><span class="line">    executorService.shutdown();</span><br><span class="line"></span><br><span class="line">    ThreadUtils.logCurrThreadName(TAG + <span class="string">"  main 111:0"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        LogUtils.e(TAG, <span class="string">"task execute result:"</span> + futureTask.get());</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ExecutionException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        ThreadUtils.logCurrThreadName(TAG + <span class="string">"  main 222:"</span> + i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ThreadUtils.logCurrThreadName(TAG + <span class="string">"  Main Thread Complete"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.Callable + FutureTask + Thread</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onViewClicked</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Callable + FutureTask + Thread</span></span><br><span class="line">    ThreadUtils.logCurrThreadName(TAG + <span class="string">"  main start"</span>);</span><br><span class="line">    CustomCallable task = <span class="keyword">new</span> CustomCallable();</span><br><span class="line">    FutureTask&lt;Integer&gt; futureTask = <span class="keyword">new</span> FutureTask&lt;&gt;(task);</span><br><span class="line">    Thread thread = <span class="keyword">new</span> Thread(futureTask);</span><br><span class="line">    thread.start();</span><br><span class="line"></span><br><span class="line">    ThreadUtils.logCurrThreadName(TAG + <span class="string">"  main 111:0"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        LogUtils.e(TAG, <span class="string">"task execute result:"</span> + futureTask.get());</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ExecutionException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        ThreadUtils.logCurrThreadName(TAG + <span class="string">"  main 222:"</span> + i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ThreadUtils.logCurrThreadName(TAG + <span class="string">"  main 主线程任务执行完毕"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="rxjava"></a></p><h3><span id="rxjava">rxjava</span></h3><p>Task:</p><div id="flowchart-1" class="flow-chart"></div><p>1.RegisterReqBean</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegisterReqBean</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RegisterReqBean</span><span class="params">(String name, String phone, String pwd)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.phone = phone;</span><br><span class="line">        <span class="keyword">this</span>.pwd = pwd;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.RegisterRespBen</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegisterRespBean</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RegisterReqBean</span><span class="params">(String name, String pwd, String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.pwd = pwd;</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">        &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.LoginReqBean  </p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginReqBean</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LoginReqBean</span> <span class="params">(String name, String pwd, String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.pwd = pwd;</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.LoginRespBean</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginRespBean</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LoginRespBean</span><span class="params">(String name, String pwd, String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.pwd = pwd;</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="observable">Observable</span></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Simlate Send Register Request</span><br><span class="line">RegisterReqBean registerReqBean = <span class="keyword">new</span> RegisterReqBean(<span class="string">"Robert-LIU"</span> <span class="string">"13122302312"</span>, <span class="string">"000000"</span>);</span><br><span class="line">Observable registerRequest = Observable.create(<span class="keyword">new</span> ObservableOnSubscribe&lt;RegisterReqBean&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">subscribe</span><span class="params">(ObservableEmitter&lt;RegisterReqBean&gt; emitter)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        LogUtils.e(TAG, <span class="string">"Register Request registerReqBean:"</span> + registerReqBean);</span><br><span class="line">        ThreadUtils.logCurrThreadName(TAG + <span class="string">"Register Request Success"</span>);</span><br><span class="line">        emitter.onNext(registerReqBean);</span><br><span class="line">        LogUtils.e(TAG, <span class="string">"Send Register Request"</span>);</span><br><span class="line">        emitter.onComplete();</span><br><span class="line">        LogUtils.e(TAG, <span class="string">"Register Request Send SUCCESS"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Simulate Regist Response。Convert RegisterReqBean to RegisterRespBean。</span></span><br><span class="line">Function mockRegisterResp = <span class="keyword">new</span> Function&lt;RegisterReqBean, RegisterRespBean&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RegisterRespBean <span class="title">apply</span><span class="params">(RegisterReqBean registerReqBean)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        RegisterRespBean registerRespBean = <span class="keyword">new</span> RegisterRespBean(registerReqBean.getName(),</span><br><span class="line">                registerReqBean.getPwd(), <span class="string">"Congratuation Register SUCCESS"</span>);</span><br><span class="line">        LogUtils.e(TAG, <span class="string">"Register Response registerRespBean:"</span> + registerRespBean);</span><br><span class="line">        TimeUnit.SECONDS.sleep(<span class="number">5</span>);<span class="comment">// Simutlate Network Delay</span></span><br><span class="line">        ThreadUtils.logCurrThreadName(TAG + <span class="string">" Resgister Response SUCCESS"</span>);</span><br><span class="line">        <span class="keyword">return</span> registerRespBean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Simulate Login Request。Convert RegisterRespBean to LoginReqBean。</span></span><br><span class="line">Function mockLoginReq = <span class="keyword">new</span> Function&lt;RegisterRespBean, LoginReqBean&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> LoginReqBean <span class="title">apply</span><span class="params">(RegisterRespBean registerRespBean)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        LoginReqBean loginReqBean = <span class="keyword">new</span> LoginReqBean(registerRespBean.getName() + <span class="string">" 我要登陆"</span>, registerRespBean.getPwd());</span><br><span class="line">        LogUtils.e(TAG, <span class="string">"Login Request loginReqBean:"</span> + loginReqBean);</span><br><span class="line">        ThreadUtils.logCurrThreadName(TAG + <span class="string">" Login Request SUCCESS"</span>);</span><br><span class="line">        <span class="keyword">return</span> loginReqBean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Simulate Login Response。Convert LoginReqBean to LoginRespBean。</span></span><br><span class="line">Function mockLoginResp = <span class="keyword">new</span> Function&lt;LoginReqBean, LoginRespBean&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> LoginRespBean <span class="title">apply</span><span class="params">(LoginReqBean loginReqBean)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        LoginRespBean loginRespBean = <span class="keyword">new</span> LoginRespBean(loginReqBean.getName(),</span><br><span class="line">                loginReqBean.getPwd(), <span class="string">"Congraduation Login SUCCESS"</span>);</span><br><span class="line">        LogUtils.e(TAG, <span class="string">"登录响应 loginRespBean:"</span> + loginRespBean);</span><br><span class="line">        TimeUnit.SECONDS.sleep(<span class="number">5</span>);<span class="comment">// Simulate Network Delay</span></span><br><span class="line">        ThreadUtils.logCurrThreadName(TAG + <span class="string">" Login Response Success"</span>);</span><br><span class="line">        <span class="keyword">return</span> loginRespBean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Simulate accept Login Response Result(Subscribe)</span></span><br><span class="line">Observer&lt;LoginRespBean&gt; resultObserver = <span class="keyword">new</span> Observer&lt;LoginRespBean&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSubscribe</span><span class="params">(Disposable d)</span> </span>&#123;</span><br><span class="line">        LogUtils.e(TAG, <span class="string">"onSubscribe"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNext</span><span class="params">(LoginRespBean loginRespBean)</span> </span>&#123;</span><br><span class="line">        LogUtils.e(TAG, <span class="string">"onNext Login SUCCESS, you can enjoy the service.。 loginRespBean:"</span> + loginRespBean);</span><br><span class="line">        ThreadUtils.logCurrThreadName(TAG + <span class="string">" "</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(Throwable e)</span> </span>&#123;</span><br><span class="line">        LogUtils.e(TAG, <span class="string">"onError e:"</span> + e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onComplete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        LogUtils.e(TAG, <span class="string">"onComplete"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>Map Operation</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">registerRequest.subscribeOn(Schedulers.io())</span><br><span class="line">                .observeOn(Schedulers.newThread())</span><br><span class="line">                .map(mockRegisterResp)</span><br><span class="line">                .observeOn(Schedulers.io())</span><br><span class="line">                .map(mockLoginReq)</span><br><span class="line">                .observeOn(Schedulers.newThread())</span><br><span class="line">                .map(mockLoginResp)</span><br><span class="line">                .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">                .subscribe(resultObserver);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBtnJavaRxjavaMergeClicked</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * Wating Muti Task Exec Complete</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        Observable o1 = Observable.create((ObservableOnSubscribe&lt;String&gt;) e -&gt; &#123;</span><br><span class="line">            ThreadUtils.logCurrThreadName(TAG + <span class="string">" Observable1"</span>);</span><br><span class="line">            TimeUnit.SECONDS.sleep(<span class="number">5</span>);</span><br><span class="line">            e.onNext(<span class="string">"First Observable"</span>);</span><br><span class="line">            e.onComplete();</span><br><span class="line">        &#125;).subscribeOn(Schedulers.newThread());</span><br><span class="line"></span><br><span class="line">        Observable o2 = Observable.create((ObservableOnSubscribe&lt;String&gt;) e -&gt; &#123;</span><br><span class="line">            ThreadUtils.logCurrThreadName(TAG + <span class="string">" Observable2"</span>);</span><br><span class="line">            TimeUnit.SECONDS.sleep(<span class="number">3</span>);</span><br><span class="line">            e.onNext(<span class="string">"Second Observable"</span>);</span><br><span class="line">            e.onComplete();</span><br><span class="line">        &#125;).subscribeOn(Schedulers.newThread());</span><br><span class="line"></span><br><span class="line">        Observable o3 = Observable.create((ObservableOnSubscribe&lt;String&gt;) e -&gt; &#123;</span><br><span class="line">            ThreadUtils.logCurrThreadName(TAG + <span class="string">" Observable3"</span>);</span><br><span class="line">            TimeUnit.SECONDS.sleep(<span class="number">1</span>);</span><br><span class="line">            e.onNext(<span class="string">"Third Observable"</span>);</span><br><span class="line">            e.onComplete();</span><br><span class="line">        &#125;).subscribeOn(Schedulers.newThread());</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *  After all obeserved task commit onComplete event，subscriber commit onComplete method.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        Observable.merge(o1, o2, o3)</span><br><span class="line">                .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">                .subscribe(<span class="keyword">new</span> Observer() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSubscribe</span><span class="params">(Disposable d)</span> </span>&#123;</span><br><span class="line">                        LogUtils.e(TAG, <span class="string">"onSubscribe"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNext</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">                        LogUtils.e(TAG, <span class="string">"onNext: "</span> + o);</span><br><span class="line">                        ThreadUtils.logCurrThreadName(TAG + <span class="string">" onNext"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(Throwable e)</span> </span>&#123;</span><br><span class="line">                        LogUtils.e(TAG, <span class="string">"onError"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onComplete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                        LogUtils.e(TAG, <span class="string">"onComplete"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: Async-Actionop1=>operation: Blockop2=>end: Sync-Actionst(right)->op1(right)->op2(right)`</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script><textarea id="flowchart-1-code" style="display: none">st=>start: Register Requeste=>end: Login Respondop1=>operation: Register Respondop2=>operation: Login Requestst(right)->op1(right)->op2(right)->e</textarea><textarea id="flowchart-1-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-1-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-1-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-1", options);</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;asynctosyncactivity&quot;&gt;AsyncToSyncActivity&lt;/span&gt;&lt;/h2&gt;&lt;div id=&quot;flowchart-0&quot; class=&quot;flow-chart&quot;&gt;&lt;/div&gt;


&lt;ul&gt;&lt;li&gt;AsyncToSyncActiv
      
    
    </summary>
    
    
    
      <category term="Java" scheme="https://www.robert-liu-designer.tk/tags/Java/"/>
    
      <category term="Concurrent" scheme="https://www.robert-liu-designer.tk/tags/Concurrent/"/>
    
  </entry>
  
  <entry>
    <title>docker-build-deploy</title>
    <link href="https://www.robert-liu-designer.tk/2020/04/09/docker-build-deploy/"/>
    <id>https://www.robert-liu-designer.tk/2020/04/09/docker-build-deploy/</id>
    <published>2020-04-09T04:44:29.000Z</published>
    <updated>2020-04-15T13:34:04.064Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="startDocker">StartDocker</a></li><li><a href="#image">Image</a></li><li><a href="#container">Container</a></li><li><a href="#ignoreF">.dockerignore</a></li><li><a href="#DockFile">Dockerfile</a></li><li><a href="#buildImg">Build Image</a></li></ul><p><a name="startDcoker"></a></p><h3><span id="start-dcoker">Start Dcoker</span></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">##########################################</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Install</span></span><br><span class="line">sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common</span><br><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg |sudo apt-key add -</span><br><span class="line">sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"</span><br><span class="line">apt-get install docker-ce</span><br><span class="line"><span class="meta">#</span><span class="bash"> docker-ce-cli containerd.io</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> vi /etc/docker/daemon.json</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">##########################################</span></span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;storage-driver&quot;</span><br><span class="line">    :</span><br><span class="line">    &quot;devicemapper&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Start Docker Service</span><br><span class="line">sudo service docker start</span><br><span class="line"># enable docker</span><br><span class="line">systemctl enable docker</span><br><span class="line"># Stop Docker Service</span><br><span class="line">sudo service docker stop</span><br><span class="line"># Restart Dcoker</span><br><span class="line">sudo service docker restart</span><br></pre></td></tr></table></figure><p><a name="image"></a></p><h3><span id="docker-images">Docker Images</span></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Note:</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;docker&#x2F;image</span><br><span class="line"></span><br><span class="line">repositories.js records all image info</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># list images</span><br><span class="line">docker images ls</span><br><span class="line"></span><br><span class="line"># delete images</span><br><span class="line">docker image rm [imagename]</span><br><span class="line"></span><br><span class="line"># pull image</span><br><span class="line">docker pull [imagename]&#x2F;[tag]</span><br><span class="line"></span><br><span class="line"># Search image</span><br><span class="line">docker search [imagename]</span><br></pre></td></tr></table></figure><p><a name="#container"></a></p><h3><span id="docker-container">Docker Container</span></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker container ls</span><br><span class="line">docker container ls -all</span><br><span class="line">docker container rm [container_id]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Note:</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;docker&#x2F;containers</span><br></pre></td></tr></table></figure><p><a name="ignoreF"></a></p><h3><span id="dockerignore">.dockerignore</span></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.git</span><br><span class="line">node_modules</span><br><span class="line">npm_debug.log</span><br></pre></td></tr></table></figure><p><a name="DockFile"></a></p><h3><span id="dockerfile">Dockerfile</span></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> base image and its version</span></span><br><span class="line">FROM ubuntu</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> File Author/Maintainer</span></span><br><span class="line">MAINTAINER Maintainer Robert-LIU</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Copy ./app files to containers /app folder</span></span><br><span class="line">COPY ./app</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Define Work Directory</span></span><br><span class="line">WORKDIR /app</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">###################################</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Install Nginx</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Add application repository URL to the default sorces</span></span><br><span class="line"></span><br><span class="line">Run echo "deb http://mirrors.aliyun.com/ubuntu/ xenial main" &gt;&gt; /etc/apt/source.list</span><br><span class="line"><span class="meta">#</span><span class="bash"> Update Repository</span></span><br><span class="line">RUN apt-get update</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Copy a configuration file from the current directory</span></span><br><span class="line">Add xxx.conf /usr/lib/</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">############################################</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Expose External Port</span></span><br><span class="line">EXPOSE 80</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Set the default <span class="built_in">command</span> to excute</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> When Creating a new container</span></span><br><span class="line"></span><br><span class="line">CMD service nginx start</span><br></pre></td></tr></table></figure><p><a name="buildImg"></a></p><h3><span id="build-image">Build Image</span></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Build Docker Image File</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Defalut version as latest</span></span><br><span class="line">docker image build -t Lrobert-liu-demo .</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> define version</span></span><br><span class="line">docker image build -t robert-liu-demo:0.0.1 .</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Notes:</span><br><span class="line">...</span><br><span class="line">Successfully built 0223asde22as</span><br><span class="line">Successfully tagged robert-liu-demo:latest</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><a name="publishDocker"></a></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Login Your cloud.docker.com OR hub.docker.com account</span></span><br><span class="line">docker login</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> dcoker image tag [imagename] [username]/[repository]:[tag]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Sample as follow</span></span><br><span class="line">docker image tag robert-liu-demo:0.0.1 robertliu/robert-liu-demo:0.0.1</span><br><span class="line"><span class="meta">#</span><span class="bash"> Or</span></span><br><span class="line">docker image robertliu/robert-liu-demo:0.0.1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Push Image to Remote Repository</span></span><br><span class="line">docker image push [username]/[repository]:[tag]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;startDocker&quot;&gt;StartDocker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#image&quot;&gt;Image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#container&quot;&gt;Container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a h
      
    
    </summary>
    
    
    
      <category term="Tools" scheme="https://www.robert-liu-designer.tk/tags/Tools/"/>
    
      <category term="Docker" scheme="https://www.robert-liu-designer.tk/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>mybatis-Introdution</title>
    <link href="https://www.robert-liu-designer.tk/2020/04/08/mybatis/"/>
    <id>https://www.robert-liu-designer.tk/2020/04/08/mybatis/</id>
    <published>2020-04-07T16:00:00.000Z</published>
    <updated>2020-04-09T07:50:30.073Z</updated>
    
    <content type="html"><![CDATA[<div id="aplayer-qrLIdhEw" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-qrLIdhEw"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "她的睫毛",              author: "周杰伦",              url: "http://home.ustc.edu.cn/~mmmwhy/%d6%dc%bd%dc%c2%d7%20-%20%cb%fd%b5%c4%bd%de%c3%ab.mp3",              pic: "http://home.ustc.edu.cn/~mmmwhy/jay.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><h2><span id="1import-dependency-into-pomxml">1.Import dependency into pom.xml</span></h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>x.x.x<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2><span id="2xml-setting">2.XML Setting</span></h2><ul><li>configuration（配置）<ul><li><a href="#properties">properties（属性）</a></li>        <li><a href="#settings">settings（设置）</a></li><li><a href="#typeAliases">typeAliases（类型别名）</a></li><li><a href="#typeHandlers">typeHandlers（类型处理器）</a></li><li><a href="#objectFactory">objectFactory（对象工厂）</a></li><li><a href="#plugins">plugins（插件）</a></li><li><a href="#environments">environments（环境配置）</a></li><li><a href="#databaseIdProvider">databaseIdProvider（数据库厂商标识）</a></li><li><a href="#mapper">mappers（映射器）</a></li></ul></li></ul><p><a name="properties"></a></p><h3><span id="properties">Properties</span></h3><p>Priority:<br>Method Param Define &gt; resource/url &gt; properties.property</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"org/mybatis/example/config.properties"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- ... --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"org.apache.ibatis.parsing.PropertyParser.enable-default-value"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span> <span class="comment">&lt;!-- Start Default Value Property --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"org.apache.ibatis.parsing.PropertyParser.default-value-separator"</span> <span class="attr">value</span>=<span class="string">"?:"</span>/&gt;</span> <span class="comment">&lt;!-- modify defalut split character --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;driver&#125;"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;url&#125;"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;username:ut_user&#125;"</span>/&gt;</span><span class="comment">&lt;!-- If 'username' undefined, it's property will set as 'ut_suer'in MyBatis over 3.4.2 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;password&#125;"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a name="settings"></a></p><h3><span id="settings">Settings</span></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"cacheEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadingEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"multipleResultSetsEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"useColumnLabel"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"useGeneratedKeys"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"autoMappingBehavior"</span> <span class="attr">value</span>=<span class="string">"PARTIAL"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"autoMappingUnknownColumnBehavior"</span> <span class="attr">value</span>=<span class="string">"WARNING"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"defaultExecutorType"</span> <span class="attr">value</span>=<span class="string">"SIMPLE"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"defaultStatementTimeout"</span> <span class="attr">value</span>=<span class="string">"25"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"defaultFetchSize"</span> <span class="attr">value</span>=<span class="string">"100"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"safeRowBoundsEnabled"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"mapUnderscoreToCamelCase"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"localCacheScope"</span> <span class="attr">value</span>=<span class="string">"SESSION"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"jdbcTypeForNull"</span> <span class="attr">value</span>=<span class="string">"OTHER"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadTriggerMethods"</span> <span class="attr">value</span>=<span class="string">"equals,clone,hashCode,toString"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Inject Parameter by SqlSessionFactoryBuilder.build()</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">SqlSessionFactory factory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(reader, environment, props);</span><br></pre></td></tr></table></figure><p><a name="typeAliases"></a></p><h3><span id="typealiases">typeAliases</span></h3><p>1.XML</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">""</span> <span class="attr">type</span>=<span class="string">"pacakageName.ClassName"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.XML + Anotation</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"pacakageName"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> pacakageName</span><br><span class="line"></span><br><span class="line"><span class="meta">@Alias</span>(<span class="string">"author"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Author</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="typeHandlers"></a></p><h3><span id="typehandlers">typeHandlers</span></h3><p>1.refrence handler</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- mybatis-config.xml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeHandlers</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">typeHandler</span> <span class="attr">handler</span>=<span class="string">"org.mybatis.example.ExampleTypeHandler"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeHandlers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.owner define</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- mybatis-config.xml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeHandlers</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"org.mybatis.example"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeHandlers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Implement the interface org.apache.ibatis.type.TypeHandler or extend the convenience class org.apache.ibatis.type.BaseTypeHandler</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ExampleTypeHandler.java</span></span><br><span class="line"><span class="meta">@MappedJdbcTypes</span>(JdbcType.VARCHAR)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExampleTypeHandler</span> <span class="keyword">extends</span> <span class="title">BaseTypeHandler</span>&lt;<span class="title">String</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNonNullParameter</span><span class="params">(PreparedStatement ps, <span class="keyword">int</span> i,</span></span></span><br><span class="line"><span class="function"><span class="params">    String parameter, JdbcType jdbcType)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">    ps.setString(i, parameter);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">getNullableResult</span><span class="params">(ResultSet rs, String columnName)</span></span></span><br><span class="line"><span class="function">    <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> rs.getString(columnName);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">getNullableResult</span><span class="params">(ResultSet rs, <span class="keyword">int</span> columnIndex)</span></span></span><br><span class="line"><span class="function">    <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> rs.getString(columnIndex);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">getNullableResult</span><span class="params">(CallableStatement cs, <span class="keyword">int</span> columnIndex)</span></span></span><br><span class="line"><span class="function">    <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> cs.getString(columnIndex);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="objectFactory"></a></p><h3><span id="objectfactory">objectFactory</span></h3><p><a name="plugins"></a></p><h3><span id="plugins">plugins</span></h3><p><a name="environments"></a></p><h3><span id="environments">environments</span></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"..."</span> <span class="attr">value</span>=<span class="string">"..."</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;driver&#125;"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;url&#125;"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;username&#125;"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;password&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a name="#databaseIdProvider"></a></p><h3><span id="databaseidprovider">databaseIdProvider</span></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">databaseIdProvider</span> <span class="attr">type</span>=<span class="string">"DB_VENDOR"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"SQL Server"</span> <span class="attr">value</span>=<span class="string">"sqlserver"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"DB2"</span> <span class="attr">value</span>=<span class="string">"db2"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"Oracle"</span> <span class="attr">value</span>=<span class="string">"oracle"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">databaseIdProvider</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a name="mappers"></a></p><h3><span id="mappers">mappers</span></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 使用相对于类路径的资源引用 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Using classpath relative resources --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"org/mybatis/builder/AuthorMapper.xml"</span>/&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- 使用完全限定资源定位符（URL） --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Using url fully qualified paths --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">url</span>=<span class="string">"file:///var/mappers/BlogMapper.xml"</span>/&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- 使用映射器接口实现类的完全限定类名 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Using mapper interface classes --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">"org.mybatis.builder.PostMapper"</span>/&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- 将包内的映射器接口实现全部注册为映射器 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Register all interfaces in a package as mappers --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"org.mybatis.builder"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><h2><span id="mapper-xml-files">Mapper XML Files</span></h2><h3><span id="select">Select</span></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span></span></span><br><span class="line"><span class="tag">  <span class="attr">id</span>=<span class="string">"selectPerson"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">parameterType</span>=<span class="string">"int"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">parameterMap</span>=<span class="string">"deprecated"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">resultType</span>=<span class="string">"hashmap"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">resultMap</span>=<span class="string">"personResultMap"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">flushCache</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">useCache</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">timeout</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">fetchSize</span>=<span class="string">"256"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">statementType</span>=<span class="string">"PREPARED"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">resultSetType</span>=<span class="string">"FORWARD_ONLY"</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectPerson"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"hashmap"</span>&gt;</span></span><br><span class="line">  SELECT * FROM PERSON WHERE ID = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h3><span id="insert">Insert</span></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span></span></span><br><span class="line"><span class="tag">  <span class="attr">id</span>=<span class="string">"insertAuthor"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">parameterType</span>=<span class="string">"domain.blog.Author"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">flushCache</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">statementType</span>=<span class="string">"PREPARED"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">keyProperty</span>=<span class="string">""</span></span></span><br><span class="line"><span class="tag">  <span class="attr">keyColumn</span>=<span class="string">""</span></span></span><br><span class="line"><span class="tag">  <span class="attr">useGeneratedKeys</span>=<span class="string">""</span></span></span><br><span class="line"><span class="tag">  <span class="attr">timeout</span>=<span class="string">"20"</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"insertAuthor"</span>&gt;</span></span><br><span class="line">  insert into Author (id,username,password,email,bio)</span><br><span class="line">  values (#&#123;id&#125;,#&#123;username&#125;,#&#123;password&#125;,#&#123;email&#125;,#&#123;bio&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"insertAuthor"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">selectKey</span></span></span><br><span class="line"><span class="tag">    <span class="attr">keyProperty</span>=<span class="string">"id"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">resultType</span>=<span class="string">"int"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">order</span>=<span class="string">"BEFORE"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">statementType</span>=<span class="string">"PREPARED"</span>&gt;</span>  </span><br><span class="line">  insert into Author</span><br><span class="line">    (id, username, password, email,bio, favourite_section)</span><br><span class="line">  values</span><br><span class="line">    (#&#123;id&#125;, #&#123;username&#125;, #&#123;password&#125;, #&#123;email&#125;, #&#123;bio&#125;, #&#123;favouriteSection,jdbcType=VARCHAR&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><h3><span id="update">Update</span></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span></span></span><br><span class="line"><span class="tag">  <span class="attr">id</span>=<span class="string">"updateAuthor"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">parameterType</span>=<span class="string">"domain.blog.Author"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">flushCache</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">statementType</span>=<span class="string">"PREPARED"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">timeout</span>=<span class="string">"20"</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateAuthor"</span>&gt;</span></span><br><span class="line">  update Author set</span><br><span class="line">    username = #&#123;username&#125;,</span><br><span class="line">    password = #&#123;password&#125;,</span><br><span class="line">    email = #&#123;email&#125;,</span><br><span class="line">    bio = #&#123;bio&#125;</span><br><span class="line">  where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><p> multi-row insert</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"insertAuthor"</span> <span class="attr">useGeneratedKeys</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">keyProperty</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">  insert into Author (username, password, email, bio) values</span><br><span class="line">  <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">item</span>=<span class="string">"item"</span> <span class="attr">collection</span>=<span class="string">"list"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">    (#&#123;item.username&#125;, #&#123;item.password&#125;, #&#123;item.email&#125;, #&#123;item.bio&#125;)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><h3><span id="delete">Delete</span></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">delete</span></span></span><br><span class="line"><span class="tag">  <span class="attr">id</span>=<span class="string">"deleteAuthor"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">parameterType</span>=<span class="string">"domain.blog.Author"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">flushCache</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">statementType</span>=<span class="string">"PREPARED"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">timeout</span>=<span class="string">"20"</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"deleteAuthor"</span>&gt;</span></span><br><span class="line">  delete from Author where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><h3><span id="sql">SQL</span></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"userColumns"</span>&gt;</span> $&#123;alias&#125;.id,$&#123;alias&#125;.username,$&#123;alias&#125;.password <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUsers"</span> <span class="attr">resultType</span>=<span class="string">"map"</span>&gt;</span></span><br><span class="line">  select</span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"userColumns"</span>&gt;</span><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"alias"</span> <span class="attr">value</span>=<span class="string">"t1"</span>/&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span>,</span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"userColumns"</span>&gt;</span><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"alias"</span> <span class="attr">value</span>=<span class="string">"t2"</span>/&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">  from some_table t1</span><br><span class="line">    cross join some_table t2</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"sometable"</span>&gt;</span></span><br><span class="line">  $&#123;prefix&#125;Table</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"someinclude"</span>&gt;</span></span><br><span class="line">  from</span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"$&#123;include_target&#125;"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"select"</span> <span class="attr">resultType</span>=<span class="string">"map"</span>&gt;</span></span><br><span class="line">  select</span><br><span class="line">    field1, field2, field3</span><br><span class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"someinclude"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"Some"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"include_target"</span> <span class="attr">value</span>=<span class="string">"sometable"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h3><span id="result-maps">Result Maps</span></h3><ul><li><tt>constructor</tt> - used for injecting results into the constructor of a class upon instantiation<ul><li><tt>idArg</tt> - ID argument; flagging results as ID will help improve overall performance</li><li><tt>arg</tt> - a normal result injected into the constructor</li></ul></li>          <li><tt>id</tt> – an ID result; flagging results as ID will help improve overall performance</li>          <li><tt>result</tt> – a normal result injected into a field or JavaBean property</li><li><tt>association</tt> – a complex type association; many results will roll up into this type<ul><li>nested result mappings – associations are <tt>resultMap</tt>s themselves, or can refer to one</li></ul></li><li><tt>collection</tt> – a collection of complex types<ul><li>nested result mappings – collections are <tt>resultMap</tt>s themselves, or can refer to one</li></ul></li><li><tt>discriminator</tt> – uses a result value to determine which <tt>resultMap</tt> to use<ul><li><tt>case</tt> – a case is a result map based on some value            <ul><li>nested result mappings – a case is also a result map itself, and thus can contain many of these same elements, or it can refer to an external resultMap.</li></ul></li></ul></li></ul><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- In Config XML file --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">"com.someapp.model.User"</span> <span class="attr">alias</span>=<span class="string">"User"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- In SQL Mapping XML file --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUsers"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">  select id, username, hashedPassword</span><br><span class="line">  from some_table</span><br><span class="line">  where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4><span id="supported-jdbc-types">Supported JDBC Types</span></h4><table><thead><tr><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center">BIT</td><td align="center">FLOAT</td><td align="center">CHAR</td><td align="center">TIMESTAMP</td><td align="center">OTHER</td><td align="center">UNDEFINED</td></tr><tr><td align="center">TINYINT</td><td align="center">REAL</td><td align="center">VARCHAR</td><td align="center">BINARY</td><td align="center">BLOB</td><td align="center">NVARCHAR</td></tr><tr><td align="center">SMALLINT</td><td align="center">DOUBLE</td><td align="center">LONGVARCHAR</td><td align="center">VARBINARY</td><td align="center">CLOB</td><td align="center">NCHAR</td></tr><tr><td align="center">INTEGER</td><td align="center">NUMERIC</td><td align="center">DATE</td><td align="center">LONGVARBINARY</td><td align="center">BOOLEAN</td><td align="center">NCLOB</td></tr><tr><td align="center">BIGINT</td><td align="center">DECIMAL</td><td align="center">TIME</td><td align="center">NULL</td><td align="center">CURSOR</td><td align="center">ARRAY</td></tr></tbody></table><p>Attribute:<br>column, javaType, jdbcType, typeHandler, select, resultMap, name</p><h4><span id="nested-select-for-collection">Nested Select for Collection:</span></h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"blogResult"</span> <span class="attr">type</span>=<span class="string">"Blog"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"posts"</span> <span class="attr">javaType</span>=<span class="string">"ArrayList"</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">ofType</span>=<span class="string">"Post"</span> <span class="attr">select</span>=<span class="string">"selectPostsForBlog"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectBlog"</span> <span class="attr">resultMap</span>=<span class="string">"blogResult"</span>&gt;</span></span><br><span class="line">  SELECT * FROM BLOG WHERE ID = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectPostsForBlog"</span> <span class="attr">resultType</span>=<span class="string">"Post"</span>&gt;</span></span><br><span class="line">  SELECT * FROM POST WHERE BLOG_ID = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"posts"</span> <span class="attr">javaType</span>=<span class="string">"ArrayList"</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">ofType</span>=<span class="string">"Post"</span> <span class="attr">select</span>=<span class="string">"selectPostsForBlog"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h4><span id="multiple-resultsets-for-collection">Multiple ResultSets for Collection</span></h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- result sets define --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectBlog"</span> <span class="attr">resultSets</span>=<span class="string">"blogs,posts"</span> <span class="attr">resultMap</span>=<span class="string">"blogResult"</span>&gt;</span></span><br><span class="line">  &#123;call getBlogsAndPosts(#&#123;id,jdbcType=INTEGER,mode=IN&#125;)&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"blogResult"</span> <span class="attr">type</span>=<span class="string">"Blog"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"id"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"title"</span> <span class="attr">column</span>=<span class="string">"title"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"posts"</span> <span class="attr">ofType</span>=<span class="string">"Post"</span> <span class="attr">resultSet</span>=<span class="string">"posts"</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">foreignColumn</span>=<span class="string">"blog_id"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"subject"</span> <span class="attr">column</span>=<span class="string">"subject"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"body"</span> <span class="attr">column</span>=<span class="string">"body"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><h4><span id="discriminator">Discriminator</span></h4><p>1.result map</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"vehicleResult"</span> <span class="attr">type</span>=<span class="string">"Vehicle"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"id"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"vin"</span> <span class="attr">column</span>=<span class="string">"vin"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"year"</span> <span class="attr">column</span>=<span class="string">"year"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"make"</span> <span class="attr">column</span>=<span class="string">"make"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"model"</span> <span class="attr">column</span>=<span class="string">"model"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"color"</span> <span class="attr">column</span>=<span class="string">"color"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">discriminator</span> <span class="attr">javaType</span>=<span class="string">"int"</span> <span class="attr">column</span>=<span class="string">"vehicle_type"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">case</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">resultMap</span>=<span class="string">"carResult"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">case</span> <span class="attr">value</span>=<span class="string">"2"</span> <span class="attr">resultMap</span>=<span class="string">"truckResult"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">case</span> <span class="attr">value</span>=<span class="string">"3"</span> <span class="attr">resultMap</span>=<span class="string">"vanResult"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">case</span> <span class="attr">value</span>=<span class="string">"4"</span> <span class="attr">resultMap</span>=<span class="string">"suvResult"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">discriminator</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"carResult"</span> <span class="attr">type</span>=<span class="string">"Car"</span> <span class="attr">extends</span>=<span class="string">"vehicleResult"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"doorCount"</span> <span class="attr">column</span>=<span class="string">"door_count"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.direct define</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"vehicleResult"</span> <span class="attr">type</span>=<span class="string">"Vehicle"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"id"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"vin"</span> <span class="attr">column</span>=<span class="string">"vin"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"year"</span> <span class="attr">column</span>=<span class="string">"year"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"make"</span> <span class="attr">column</span>=<span class="string">"make"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"model"</span> <span class="attr">column</span>=<span class="string">"model"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"color"</span> <span class="attr">column</span>=<span class="string">"color"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">discriminator</span> <span class="attr">javaType</span>=<span class="string">"int"</span> <span class="attr">column</span>=<span class="string">"vehicle_type"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">case</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">resultType</span>=<span class="string">"carResult"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"doorCount"</span> <span class="attr">column</span>=<span class="string">"door_count"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">case</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">case</span> <span class="attr">value</span>=<span class="string">"2"</span> <span class="attr">resultType</span>=<span class="string">"truckResult"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"boxSize"</span> <span class="attr">column</span>=<span class="string">"box_size"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"extendedCab"</span> <span class="attr">column</span>=<span class="string">"extended_cab"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">case</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">case</span> <span class="attr">value</span>=<span class="string">"3"</span> <span class="attr">resultType</span>=<span class="string">"vanResult"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"powerSlidingDoor"</span> <span class="attr">column</span>=<span class="string">"power_sliding_door"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">case</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">case</span> <span class="attr">value</span>=<span class="string">"4"</span> <span class="attr">resultType</span>=<span class="string">"suvResult"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"allWheelDrive"</span> <span class="attr">column</span>=<span class="string">"all_wheel_drive"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">case</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">discriminator</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><h4><span id="auto-maping">Auto Maping</span></h4><p>Regardless of the auto-mapping level configured you can enable or disable the automapping for an specific ResultMap by adding the attribute <tt>autoMapping<tt> to it:</tt></tt></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectBlog"</span> <span class="attr">resultMap</span>=<span class="string">"blogResult"</span>&gt;</span></span><br><span class="line">  select</span><br><span class="line">    B.id,</span><br><span class="line">    B.title,</span><br><span class="line">    A.username,</span><br><span class="line">  from Blog B left outer join Author A on B.author_id = A.id</span><br><span class="line">  where B.id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Mapping File --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"blogResult"</span> <span class="attr">type</span>=<span class="string">"Blog"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"author"</span> <span class="attr">resultMap</span>=<span class="string">"authorResult"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"authorResult"</span> <span class="attr">type</span>=<span class="string">"Author"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"username"</span> <span class="attr">column</span>=<span class="string">"author_username"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Auto Mapping --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userResultMap"</span> <span class="attr">type</span>=<span class="string">"User"</span> <span class="attr">autoMapping</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"password"</span> <span class="attr">column</span>=<span class="string">"hashed_password"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><h4><span id="cache">Cache</span></h4><ul><li><tt>LRU<tt> – Least Recently Used: Removes objects that haven't been used for the longst period of time.</tt></tt></li><li><tt>FIFO<tt> – First In First Out: Removes objects in the order that they entered the cache.</tt></tt></li><li><tt>SOFT<tt> – Soft Reference: Removes objects based on the garbage collector state and the rules of Soft References.</tt></tt></li><li><tt>WEAK<tt> – Weak Reference: More aggressively removes objects based on the garbage collector state and rules of Weak References.</tt></tt></li></ul><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cache</span></span></span><br><span class="line"><span class="tag">  <span class="attr">eviction</span>=<span class="string">"FIFO"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">flushInterval</span>=<span class="string">"60000"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">size</span>=<span class="string">"512"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">readOnly</span>=<span class="string">"true"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>Interface of cache</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Cache</span> </span>&#123;</span><br><span class="line">  <span class="function">String <span class="title">getId</span><span class="params">()</span></span>;</span><br><span class="line">  <span class="function"><span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span></span>;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">putObject</span><span class="params">(Object key, Object value)</span></span>;</span><br><span class="line">  <span class="function">Object <span class="title">getObject</span><span class="params">(Object key)</span></span>;</span><br><span class="line">  <span class="function"><span class="keyword">boolean</span> <span class="title">hasKey</span><span class="params">(Object key)</span></span>;</span><br><span class="line">  <span class="function">Object <span class="title">removeObject</span><span class="params">(Object key)</span></span>;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://mybatis.org/images/mybatis-logo.png&quot; alt=&quot;Mybatis-3&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Java" scheme="https://www.robert-liu-designer.tk/tags/Java/"/>
    
      <category term="Plugins" scheme="https://www.robert-liu-designer.tk/tags/Plugins/"/>
    
      <category term="Mybatis" scheme="https://www.robert-liu-designer.tk/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>git_operation</title>
    <link href="https://www.robert-liu-designer.tk/2020/04/07/git-operation/"/>
    <id>https://www.robert-liu-designer.tk/2020/04/07/git-operation/</id>
    <published>2020-04-07T05:20:20.000Z</published>
    <updated>2020-04-09T08:56:29.585Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="config-git">Config Git</span></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.name Robert LIU</span><br><span class="line">git config --global user.email liujuncz@126.com</span><br><span class="line"><span class="meta">#</span><span class="bash"> define <span class="built_in">alias</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> git config --global <span class="built_in">alias</span>.&lt;aliname&gt; &lt;<span class="built_in">command</span>&gt;</span></span><br><span class="line">git config --global alias.lg "log --color --graph ==pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit"</span><br><span class="line">git config --list</span><br><span class="line">git config &lt;key&gt;</span><br></pre></td></tr></table></figure><p>Git Config File :</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;etc&#x2F;gitconfig</span><br><span class="line">~&#x2F;.gitconfig</span><br><span class="line">~&#x2F;.config&#x2F;git&#x2F;config</span><br><span class="line">.git&#x2F;config</span><br></pre></td></tr></table></figure><ul><li><a href="#A_0">Initialize Reposition</a></li><li><a href="#B_0">Add new, modified or deleted files</a></li><li><a href="#C_0">Display Status</a></li><li><a href="#E_0">Initialize Reposition</a></li><li><a href="#F_0">Move files</a></li><li><a href="#G_0">Diff file</a></li><li><a href="#H_0">History Log</a></li><li><a href="#I_0">Undo or Modify</a></li><li><a href="#J_0">Remote Repo</a></li><li><a href="#K_0">Add Tags</a></li><li><a href="#L_0">Undo or Modify</a></li><li><a href="#M_0">Storage Or Clean</a></li><li><a href="#N_0">Git Search</a></li><li><a href="#O_0">Git Undo</a></li><li><a href="#P_0">Git Roll Back</a></li><li><a href="#Q_0">Git Delete Submit</a></li></ul><p><a name="A_0"></a></p><h2><span id="a-initialize-reposition">A. Initialize Reposition</span></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1. init</span></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2.clone a copy as demo</span></span><br><span class="line">git clone https://github.com/LiusStarSpace/OnlineEducation_Python.git</span><br><span class="line"><span class="meta">#</span><span class="bash"> format as: git <span class="built_in">clone</span> [url] [pathName]</span></span><br></pre></td></tr></table></figure><p><a name="B_0"></a></p><h2><span id="b-add-new-modified-or-deleted-files">B. Add new, modified or deleted files</span></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1. modified or deleted files</span></span><br><span class="line">git add -u</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. new or modified files</span></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. all</span></span><br><span class="line">git add -A</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 4. Temp file to store</span></span><br><span class="line">git add &lt;file1&gt; &lt;file2&gt; &lt;file3&gt;</span><br></pre></td></tr></table></figure><p><a name="C_0"></a></p><h2><span id="c-display-status">C. Display Status</span></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1. all info</span></span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. short info</span></span><br><span class="line">git status -s</span><br></pre></td></tr></table></figure><p><a name="D_0"></a></p><h2><span id="d-commit-files">D. Commit files</span></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1. Add comment by using -m paramer</span></span><br><span class="line">git commit -m &lt;commit log&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. directly submit</span></span><br><span class="line">git commit -a -m &lt;commit log&gt;</span><br></pre></td></tr></table></figure><p><a name="E_0"></a></p><h2><span id="e-remove-files">E. Remove files</span></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1. force remove tracked file</span></span><br><span class="line">git rm -f &lt;fileName&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. remove temporary file</span></span><br><span class="line">git rm --cached &lt;fileName&gt;</span><br></pre></td></tr></table></figure><p><a name="F_0"></a></p><h2><span id="f-move-files">F. Move files</span></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1. rename file</span></span><br><span class="line">git mv &lt;fileName1&gt; &lt;fileName2&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. move file to folder</span></span><br><span class="line">git mv &lt;fileName&gt; test/</span><br></pre></td></tr></table></figure><p><a name="G_0"></a></p><h2><span id="g-diff-file">G. Diff file</span></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1. compare <span class="built_in">local</span> and remote</span></span><br><span class="line">git diff --cache</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. diff specific file</span></span><br><span class="line">git diff &lt;fileName&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. diff commit version </span></span><br><span class="line">git diff &lt;commitId_1&gt; &lt;commitId_2&gt; [path]</span><br></pre></td></tr></table></figure><p><a name="H_0"></a></p><h2><span id="h-history-log">H. History Log</span></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git log [&lt;options&gt;] [&lt;since&gt;..&lt;until&gt;] [[--] &lt;path&gt;...]</span><br><span class="line"><span class="meta">#</span><span class="bash"> Browse <span class="built_in">history</span> commit</span></span><br><span class="line">git reflog</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> -p: display commit diff</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --<span class="built_in">stat</span>: count commit <span class="built_in">history</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --pretty: display format, include: oneline, short, medium, full, fuller, email, format...</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --graph: display as ASCII graph to show commit or merge <span class="built_in">history</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -n: recent commit n lines info </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --author: specifi author</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --grep: include key words commit</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --since/--after</span></span><br><span class="line">git log --graph --pretty=oneline --abbrev-commit</span><br></pre></td></tr></table></figure><p><a name="I_0"></a></p><h2><span id="i-undo-or-modify">I. Undo or Modify</span></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Undo</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> recover temp repo, <span class="built_in">local</span> repo and workdir repo to pre version</span></span><br><span class="line">git reset --hard HEAD~</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> recover temp repo, <span class="built_in">local</span> repo exclude wordir to pre version</span></span><br><span class="line">git reset --mixed HEAD~</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> recover <span class="built_in">local</span> repo exclude temp repo and wordir to pre vetsion</span></span><br><span class="line">git reset --soft HEAD~</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> reset workdir modified file</span></span><br><span class="line">git checkout --&lt;file&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Override pre submit</span></span><br><span class="line">git commit --amend -m "apend commit +1"</span><br></pre></td></tr></table></figure><p><a name="J_0"></a></p><h2><span id="j-remote-repo">J. Remote Repo</span></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone &lt;url&gt;</span><br><span class="line">git remote</span><br><span class="line">git remote -v</span><br><span class="line">git remote show [remote-name]</span><br><span class="line">git remote rename [old name] [new name]</span><br><span class="line">git remote add &lt;shortname&gt; &lt;url&gt;</span><br><span class="line">git remote rm [remote-name]</span><br><span class="line">git fetch [remote name]# update local data</span><br><span class="line">git pull [remote-name] [branch-name]</span><br><span class="line">git push [remote-name] [branch-name]</span><br><span class="line">git push [remote-name] --delete [branch-name]</span><br></pre></td></tr></table></figure><p><a name="K_0"></a></p><h2><span id="k-add-tags">K. Add Tags</span></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git tag &lt;tagname&gt;</span><br><span class="line">git tag -a &lt;tagname&gt; &lt;commit id&gt;</span><br><span class="line">git push origin &lt;tagname&gt;</span><br><span class="line">git push origin --tag</span><br><span class="line">git checkout -b [branchname] [tagname]</span><br><span class="line">git push origin :refs/tags/&lt;tagname&gt;</span><br></pre></td></tr></table></figure><p><a name="L_0"></a></p><h2><span id="l-branch">L. Branch</span></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git branch</span><br><span class="line">git branch -v</span><br><span class="line">git show-branch</span><br><span class="line">git branch &lt;branchname&gt;</span><br><span class="line">git checkout &lt;branchname&gt;</span><br><span class="line">git checkout -b &lt;branchname&gt;</span><br><span class="line"><span class="meta">#</span><span class="bash"> fast forward</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> git merge &lt;branchname&gt;</span></span><br><span class="line">git merge --no-ff -m "merge with no-ff"</span><br><span class="line"></span><br><span class="line">git branch --merge</span><br><span class="line">git branch --nomerged</span><br><span class="line">git branch -d &lt;branchname&gt;</span><br><span class="line"><span class="meta">#</span><span class="bash"> git branch -D &lt;branchname&gt;</span></span><br><span class="line">git push origin --delete serverfix</span><br><span class="line">git checkout -m &lt;branchname&gt;</span><br><span class="line">git checkout -b branch-name origin/branch-name</span><br></pre></td></tr></table></figure><p><a name="M_0"></a></p><h2><span id="m-storage-or-clean">M. Storage Or Clean</span></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Storage file</span></span><br><span class="line">git stash list</span><br><span class="line">git stash apply</span><br><span class="line">git stash apply stash@&#123;&lt;num&gt;&#125;</span><br><span class="line">git stash drop stash@&#123;&lt;num&gt;&#125;</span><br><span class="line">git stash pop</span><br><span class="line">git stash branch &lt;branchname&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Clear File</span></span><br><span class="line">git clean -i</span><br><span class="line">git clean -d -n</span><br><span class="line"><span class="meta">#</span><span class="bash"> git clean</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> git clean -d -f</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> git clean -d -x</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> git stash --all</span></span><br></pre></td></tr></table></figure><p><a name="N_0"></a></p><h2><span id="n-git-search">N. Git Search</span></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git greb &lt;tag&gt;</span><br><span class="line">git greb -n &lt;tag&gt;</span><br><span class="line">git greb --count &lt;tag&gt;</span><br><span class="line">git grep -p &lt;tag&gt; [fileExtension]</span><br><span class="line">git log -S[tag]</span><br><span class="line">git log -L</span><br></pre></td></tr></table></figure><p><a name="O_0"></a></p><h2><span id="o-git-undo">O. Git Undo</span></h2><p>1.work tree undo</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git  checkout .</span><br></pre></td></tr></table></figure><p>2.submit partial</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git status</span><br><span class="line">git reset HEAD &lt;filename&gt;</span><br></pre></td></tr></table></figure><p>3.reset modified</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git reset HEAD filename</span><br><span class="line">git checkout filename</span><br></pre></td></tr></table></figure><p>4.update commit mark</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git add filename</span><br><span class="line">git commit --amend -m"update modifed"</span><br></pre></td></tr></table></figure><p><a name="P_0"></a></p><h2><span id="p-git-roll-back">P. Git Roll Back</span></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git checkout &lt;tag&gt;</span><br><span class="line">git checkout &lt;branchname&gt;</span><br></pre></td></tr></table></figure><p>1.undo to specific version</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git log &lt;filename&gt;</span><br><span class="line">git checkout &lt;commitID&gt; &lt;filename&gt;</span><br></pre></td></tr></table></figure><p>2.delete latest commit</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> REVERT</span></span><br><span class="line">git revert HEAD</span><br><span class="line">git push origin master</span><br><span class="line"><span class="meta">#</span><span class="bash"> RESET</span></span><br><span class="line">git reset --hard HEAD^</span><br><span class="line">git push origin master</span><br><span class="line"><span class="meta">#</span><span class="bash"> roll back</span></span><br><span class="line">git log</span><br><span class="line">git revert &lt;commitID&gt;</span><br></pre></td></tr></table></figure><p><a name="Q_0"></a></p><h2><span id="q-git-delete-submit">Q. Git Delete Submit</span></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git log --oneline -n5</span><br><span class="line"><span class="meta">#</span><span class="bash"> Former commit version</span></span><br><span class="line">git rebase -i "commitID"</span><br><span class="line">git push origin master -f</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;config-git&quot;&gt;Config Git&lt;/span&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git conf
      
    
    </summary>
    
    
    
      <category term="Tools" scheme="https://www.robert-liu-designer.tk/tags/Tools/"/>
    
      <category term="Git" scheme="https://www.robert-liu-designer.tk/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://www.robert-liu-designer.tk/2020/04/06/hello-world/"/>
    <id>https://www.robert-liu-designer.tk/2020/04/06/hello-world/</id>
    <published>2020-04-06T05:29:13.000Z</published>
    <updated>2020-04-16T02:08:27.296Z</updated>
    
    <content type="html"><![CDATA[<div align="center"><p style="color:#3fb573;fontsize:4em">Celebrating my first blog and the websited has been built!</p></div><div align="center"><p style="color:#3fb573;fontsize:4em">Conratuation!</p></div>]]></content>
    
    <summary type="html">
    
      &lt;!--

Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).

## Quick Start

### Create a new post

&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/one-command-deployment.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;–&amp;gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="demo" scheme="https://www.robert-liu-designer.tk/tags/demo/"/>
    
  </entry>
  
</feed>
